import type { NextPage } from "next";
import { useState } from "react";
import Head from "next/head";
import styled from "styled-components";

import { User } from "../generated/graphql";
import { isUserLoggedIn } from "../utils/isUserLoggedIn";
import { getUsersFullname } from "../utils/getUsersFullname";
import { formatDate } from "../utils/dateFunctions";

import ChatSection from "../containers/ChatSection";
import Sidebar from "../components/Sidebar";
import Chat from "../components/Chat";

const Container = styled.div`
  display: flex;
  height: 100vh;
  width: 100vw;
`;

const SidebarContainer = styled.div`
  width: 100%;
  height: 100%;
  flex: 40%;
  min-width: 330px;
  border-right: 1px solid ${({ theme }) => theme.globalTheme.greyLineColor};
  ${({ theme }) => theme.homePageTheme.mediumScreen`
    flex: 35%;
  `};
`;

const ChatWrapper = styled.div`
  width: 100%;
  height: 100%;
  flex: 60%;
  ${({ theme }) => theme.homePageTheme.mediumScreen`
    flex: 65%;
  `};
`;

interface HomePageProps {
  currentUser: User;
}

const Home: NextPage<HomePageProps> = ({ currentUser }) => {
  const [chatId, setChatId] = useState<null | number>(null);

  const handleClick = (selectedChatId: number) => {
    setChatId(selectedChatId);
  };

  return (
    <div>
      <Head>
        <title>Whatsapp Clone</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Container>
        <SidebarContainer>
          <Sidebar>
            {currentUser?.chats?.map((chat) => {
              const selectedChatId = Number(chat.id);
              return (
                <Chat
                  key={`chatId-${chat.id}`}
                  isHighlighted={chatId === selectedChatId}
                  onClick={() => handleClick(selectedChatId)}
                  name={
                    chat.groupName
                      ? chat.groupName
                      : getUsersFullname(chat.members, Number(currentUser.id))
                  }
                  isGroupChat={!!chat.groupName}
                  latestMessage={chat.messages?.[0].text}
                  timeOfLatestMessage={formatDate(chat.messages?.[0].createdAt)}
                />
              );
            })}
          </Sidebar>
        </SidebarContainer>
        <ChatWrapper>
          {chatId && currentUser?.chats && (
            <ChatSection
              chatId={chatId}
              chat={
                currentUser.chats.filter(
                  (chat) => Number(chat.id) === chatId
                )[0]
              }
              userId={Number(currentUser.id)}
            />
          )}
        </ChatWrapper>
      </Container>
    </div>
  );
};

export const getServerSideProps = isUserLoggedIn;

export default Home;
